{"version":3,"sources":["reducers/movieReducer.js","contexts/MovieContext.js","components/MovieForm.js","components/MovieDetails.js","components/MovieList.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["movieReducer","state","action","type","title","movie","director","year","genre","id","uuid","filter","Moviecontext","createContext","MovieContextProvider","props","movies","dispatch","useReducer","data","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","_jsx","Provider","value","children","MovieForm","setTitle","useState","setDirector","setYear","setGenre","useContext","_jsxs","onSubmit","e","preventDefault","placeholder","required","onChange","target","MovieDetail","_ref","onClick","className","MovieList","length","map","Navbar","concat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cc0ddbb.chunk.js","sourcesContent":["import { v4 as uuid } from 'uuid';\r\nexport const movieReducer=(state, action)=>{\r\n    switch(action.type){\r\n        case 'ADD_MOVIE':\r\n            return [...state,{\r\n                title:action.movie.title,\r\n                director:action.movie.director,\r\n                year:action.movie.year,\r\n                genre:action.movie.genre,\r\n                id:uuid()\r\n            }]\r\n\r\n        case 'REMOVE_MOVIE':\r\n            return state.filter(movie => movie.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useState, useReducer, useEffect } from 'react';\r\nimport { movieReducer } from '../reducers/movieReducer';\r\n\r\n\r\nexport const Moviecontext = createContext();\r\n\r\nconst MovieContextProvider = (props) => {\r\n    const [movies, dispatch] = useReducer(movieReducer, [], ()=>{\r\n        const data = localStorage.getItem('movies');\r\n        return data ? JSON.parse(data) : []\r\n    })\r\n    useEffect(()=>{\r\n        localStorage.setItem('movies', JSON.stringify(movies) )\r\n    }, [movies])\r\n    return (\r\n        <Moviecontext.Provider value={{ movies, dispatch }}>\r\n            {props.children}\r\n        </Moviecontext.Provider>\r\n    );\r\n}\r\n\r\nexport default MovieContextProvider;","import React, { useState, useContext } from 'react';\r\nimport { Moviecontext } from '../contexts/MovieContext';\r\n\r\nconst MovieForm = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [director, setDirector] = useState('');\r\n    const [year, setYear] = useState('');\r\n    const [genre, setGenre] = useState('');\r\n    const { dispatch } = useContext(Moviecontext);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type:'ADD_MOVIE', movie:{\r\n            title,director,year,genre\r\n        }})\r\n        setTitle('');\r\n        setDirector('');\r\n        setYear('');\r\n        setGenre('');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"movie`s name\" value={title} required\r\n                onChange={(e) => setTitle(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"director`s name\" value={director} required\r\n                onChange={(e) => setDirector(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"year of production\" value={year} required\r\n                onChange={(e) => setYear(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"genre\" value={genre} required\r\n                onChange={(e) => setGenre(e.target.value)} />\r\n            <input type=\"submit\" value=\"submit\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default MovieForm;","import React, {useContext} from 'react';\r\nimport { Moviecontext } from '../contexts/MovieContext';\r\n\r\nconst MovieDetail = ({movie}) => {\r\n    const {dispatch} = useContext(Moviecontext);\r\n    return ( \r\n        <li onClick={()=>dispatch({type:'REMOVE_MOVIE', id:movie.id})}>\r\n            <div className=\"title\">{movie.title}</div>\r\n            <div className=\"director\" >{movie.director}</div>\r\n            <div className='year'>{movie.year}</div>\r\n            <div className='genre'>{movie.genre}</div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default MovieDetail;\r\n\r\n\r\n////","import React, {useContext} from 'react';\r\nimport { Moviecontext } from '../contexts/MovieContext';\r\nimport MovieDetail from './MovieDetails';\r\n\r\nconst MovieList = () => {\r\n   const{movies} = useContext(Moviecontext)\r\n    return movies.length?(\r\n        <div className=\"movie-list\">\r\n            <ul>\r\n                {movies.map(movie=>{\r\n                    return(\r\n                        <MovieDetail key={movie.id} movie={movie} />\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div> \r\n     ):\r\n     (<div className=\"empty\">!You don't have any movies to watch so better cal me</div>)\r\n}\r\nexport default MovieList;","import React, {useContext} from 'react';\r\nimport { Moviecontext } from '../contexts/MovieContext';\r\n\r\nconst Navbar = () => {\r\n  const{movies} = useContext(Moviecontext)\r\n    return ( \r\n        <div className=\"navbar\">\r\n            <h1>My watchlist</h1>\r\n            <p>\r\n                now you can watch\r\n                {` ${movies.length} `}\r\n                in your free time\r\n            </p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;\r\n\r\n","import MovieForm from './components/MovieForm';\nimport MovieList from './components/MovieList';\nimport Navbar from './components/Navbar';\nimport MovieContextProvider from './contexts/MovieContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MovieContextProvider>\n        <Navbar/>\n        <MovieList/>\n        <MovieForm/>\n      </MovieContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n\n// to run code we should type \"set NODE_OPTIONS=--openssl-legacy-provider\" and after that \"npm start\"\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}